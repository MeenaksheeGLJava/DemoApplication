# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy to GCP

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@main
      with:
        project_id: plenary-totem-425005-c3
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Stop JAR on GCP Compute Engine if running
      run: |
        gcloud compute ssh --zone=asia-south1-c meenak_sharma2008@demo-app --command="if pgrep -f DemoApplication-0.0.1-SNAPSHOT.jar > /dev/null; then sudo pkill -f DemoApplication-0.0.1-SNAPSHOT.jar; else echo 'No process found'; fi"
        
    - name: Copy JAR to GCP Compute Engine
      run: |
        gcloud compute scp --zone=asia-south1-c target/*.jar meenak_sharma2008@demo-app:~

    - name: Start JAR on GCP Compute Engine
      run: |
        gcloud compute ssh --zone=asia-south1-c meenak_sharma2008@demo-app --command="screen -dm java -jar ~/DemoApplication-0.0.1-SNAPSHOT.jar"
        sleep 20
        gcloud compute ssh --zone=asia-south1-c meenak_sharma2008@demo-app --command="if pgrep -f DemoApplication-0.0.1-SNAPSHOT.jar > /dev/null; then echo 'Server started'; else echo 'Server failed to start'; exit 1; fi"


# Change project_id, service_account_key, --zone, jar_name
# Provide the VM instance name
